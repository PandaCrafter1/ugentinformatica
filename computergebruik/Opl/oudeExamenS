examen 20150108: opgave 3
    (imagine opening vi and editing it)
    1)  :2,$s,/\,/g
        :2,$s/[:blank:]\,/g

    2)  :2,$s/\(.*,.*,\)\(.*\),\(.*\)\(,.*\)/\1\2 - \3\4
        :2,$s/\([0-9]*\),\([0-9]*\),\(..*[\,]*..*\),\('[0-9]*\)/\2,\1,\3,\4/g
        '

    3)  :2,$s/'\([5-9][0-9]\)/19\1/g
        :2,$s/'\([0-4][0-9]\)/20\1/g

    4)  :2,$d/.*,-,.*/g

    5)  :2,$!sort -t "," -k3,3n -k2,2m

examen 20150108: opgave 5

    #!bin\bash
    for $file in $@
    do
        if [[ cat $file | wc -l = 0 ]]; then
            echo "Fout bestand $file bestaat niet of kan niet gelezen worden" 1>&2
            echo "Syntaxis: pepfilter.sh [-m arg] [-M arg] [-c arg] [-l arg] file ..." 1>&2
            exit 1
        else
            cat $file >> tempFile
        fi

    done

    while getopts ':m:M:c:l:'
    do
        case "$opt" in
            c ) index=0
                while [[ index < ${#OPTARG} ]]; do
                    subString=${string:$index:length}
                    egrep ^[A-Z]*$subString[A-Z]*$ >> tempFile
                done
                ;;
            l ) index=0
                while [[ index < ${#OPTARG} ]]; do
                    subString=${string:$index:length}
                    egrep -v ^[A-Z]*$subString[A-Z]*$ >> tempFile
                done
                ;;
            m ) grep ^([A-Z]){$OPTARG,}$ >> tempFile
                ;;
            M ) grep ^([A-Z]){0,$OPTARG}$ >> tempFile
                ;;
            \?) echo "Fout onbekende optie: $opt" 1>&2
                echo "Syntaxis: pepfilter.sh [-m arg] [-M arg] [-c arg] [-l arg] file ..." 1>&2
                exit 1
        esac

    done
    shift $((OPTIND -1))
    cat tempFile
    rm tempFile

examen 20150817: opgave 4
    #!bin/bash
    head /dev/random | tr -dc 'A-Za-z0-9,.!@#$%^&*()][{};":?-_+=' | head -c 250 >> pwList
    negaties=5
    numberOfL=$(cat $1 | grep -c 'L')
    numberOfT=$(cat $1 | grep -c 'T')
    numberOfC=$(cat $1 | grep -c 'C')

    while getopts ':cl:p:'
    do
        case "$opt" in
            c ) cat pwList | tr -d 'a-z' >> pwList
                ;;
            l ) cat pwList | head -c "$OPTARG" >> pwList
                ;;
            p ) $negaties=$OPTARG
                ;;
        esac
    done
    aantal=$(((cat pwList | wc -l) - $negaties))
    tail -n $aantal >> pwList

    for $file in $@
    do
        cat $@ >> words
    done

    file=$pwList
    while IFS= read line
    do
        echo "$line"
        if [[ (echo "$line" | tr -dc A-Za-z) < $((numberOfL)) ]]; then
            echo "\n1"
        fi
    done < "$pwList"

    file=$pwList
    while IFS= read line
    do
        echo "$line"
        if [[ (echo "$line" | tr -dc 0-9) < $((numberOfC)) ]]; then
            echo "\n1"
        fi
    done < "$pwList"

    file=$pwList
    while IFS= read line
    do
        echo "$line"
        if [[ (echo "$line" | tr -d A-Za-z0-9) < $((numberOfT)) ]]; then
            echo "\n1"
        fi
    done < "$pwList"

    file=$pwList
    while IFS= read line
    do
        echo "$line"
        if [[ (cat words | egrep -c $line) -eq 0 ]]; then
            echo "\n1"
        fi
    done < "$pwList"

    sed 's/[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*(\n1)[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*/ zeer zwak/g'
    sed 's/[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*(\n1){2}[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*/ zwak/g'
    sed 's/[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*(\n1){3}[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*/ normaal/g'
    sed 's/[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*(\n1){4}[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*/ sterk/g'
    sed 's/[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*(\n1){5}[A-Za-z0-9,.!@#$%^&*()][{};":?-_+=]*/ zeer sterk/g'
